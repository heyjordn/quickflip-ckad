[
  {
    "id": "1",
    "question": "### Create a namespace called 'mynamespace' and a pod with image nginx called nginx on this namespace",
    "answer": "```bash\nkubectl create namespace mynamespace\nkubectl run nginx --image=nginx --restart=Never -n mynamespace```",
    "category": "Kubernetes (CKAD)"
  },
  {
    "id": "2",
    "question": "### Create the pod that was just described using YAML",
    "answer": "```bash\nkubectl run nginx --image=nginx --restart=Never --dry-run=client -n mynamespace -o yaml > pod.yaml\n```\nAlternatively, you can run in one line\n```bash kubectl run nginx --image=nginx --restart=Never --dry-run=client -o yaml | kubectl create -n mynamespace -f -\n```",
    "category": "Kubernetes(CKAD)"
  },
  {
    "id": "3",
    "question": "### Create a busybox pod (using YAML) that runs the command \"env\". Run it and see the output",
    "answer": "```yaml\n# Create a  YAML template with this command \nkubectl run busybox --image=busybox --restart=Never --dry-run=client -o yaml --command -- env > envpod.yaml\n```",
    "category": "Kubernetes (CKAD)"
  },
  {
    "id": "4",
    "question": "### Get the YAML for a new namespace called 'myns' without creating it",
    "answer": "```bash\nkubectl create namespace myns -o yaml --dry-run=client\n```",
    "category": "Kubernetes (CKAD)"
  },
  {
    "id": "5",
    "question": "### Get the YAML for a new namespace called 'myns' without creating it",
    "answer": "```bash\nkubectl create namespace myns -o yaml --dry-run=client\n```",
    "category": "Kubernetes (CKAD)"
  },
  {
    "id": "6",
    "question": "### Get pods on all namespaces",
    "answer": "```bash\nkubectl get po --all-namespaces\n```\nAlternatively, we can do\nbash```\nkubectl get po -A\n```",
    "category": "Kubernetes (CKAD)"
  },
    {
    "id": "7",
    "question": "### Create a pod with image nginx called nginx and expose traffic on port 80",
    "answer": "```bash\nkubectl run nginx --image=nginx --restart=Never --port=80\n```",
    "category": "Kubernetes (CKAD)"
  }
]